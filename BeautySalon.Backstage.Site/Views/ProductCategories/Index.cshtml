
@{
    ViewBag.Title = "Index";
}
<!--<!DOCTYPE html>-->
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>服務類別列表</title>
    @*<link rel="stylesheet" href="/Content/Css/style.css" />*@
    <link rel="stylesheet" href="~/Content/Css/style.css" />
    <style>
        ul.dropdown-menu.show {
            margin-top: 8px;
            border: none;
            border-radius: 0px;
            background-color: rgb(197,207,178,1);
        }

        /* 下拉菜單 */
        .dropdown-menu {
            background-color: #C5CFB2;
            padding: 0px;
            margin: 7px 5px 5px 5px;
            position: static;
            top: 90%;
            left: 0;
            min-width: 110px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        /* 下拉菜單項目 */
        .dropdown-item {
            color: #64695B;
            font-weight: bold;
            padding: 10px;
            font-size: medium;
            display: block;
            margin: 1px;
            width: 90%;
        }

            .dropdown-item:hover {
                background-color: rgb(165, 173, 149,0.5);
                border-radius: 20px;
            }

        .row {
            margin: 20px 50px 50px 50px !important;
            background-color: rgba(241, 243, 236, 0.7) !important;
            border-radius: 18px;
        }

        h3 {
            margin: 10px;
            padding: 10px 0 0 0 !important;
            font-weight: bold !important;
            text-align: center;
            color: #776B5D !important;
        }

        .main {
            padding: 30px;
            border-radius: 18px;
            background-color: #FAF4E3;
        }

        .search-bar {
            margin-bottom: 10px !important;
            display: flex;
            align-items: center;
            margin: 20px;
            width: 40%;
        }

        form {
            width: 100%;
            max-width: 100%;
        }

        .form-control {
            flex: 1;
            max-width: 100%;
            width: 100%;
            box-sizing: border-box; /* 确保 padding 和 border 不会增加元素的总宽度 */
            color: #A0937D !important; /* 你可以根據需求修改顏色 */
        }

            .form-control::placeholder {
                color: #8E806A !important; /* 設置 placeholder 文字顏色為灰色 */
                opacity: 1; /* 確保顏色應用於 placeholder */
            }

        .btn {
            color: #fefefe !important;
            border-radius: 10px !important;
            margin: 15px;
            font-weight: bold !important;
            background-color: rgb(133,139,120,0.5) !important;
            height: 48px;
        }

        .btn-custom {
            display: flex;
            justify-content: space-between;
            height: 38px !important;
        }

        .btn-add {
            padding: 9px 16px;
            cursor: pointer;
            margin-left: auto;
        }

        .table {
            margin: 25px !important;
            width: 95% !important;
            border-collapse: separate;
            border-spacing: 2px 2px; /* 設置水平間隔為 15px，垂直間隔為 10px */
            border-radius: 10px !important;
            overflow: hidden;
            box-sizing: border-box !important;
            vertical-align: middle !important; /* 垂直居中 */
        }

        .table-container {
            /*max-height: 250px;*/
            overflow-y: auto; /* 添加纵向滚动条 */
            display: block;
            width: 100%;
            border-radius: 10px !important;
        }

        .table thead th {
            /*background-color: rgb(218, 208, 194,0.4);*/
            background-color: #CDD5C6 !important;
            text-align: center;
            padding: 10px;
            color: #776B5D !important;
            margin: 2px !important;
        }

        .table td {
            text-align: left;
            color: rgb(96, 63, 38,0.8) !important;
            padding-left: 20px !important;
            font-weight: bold;
            background-color: rgb(247, 249, 242,0.7) !important;
            height: 80px;
        }

        .operate {
            width: 100% !important;
            text-align: center !important;
            margin: 0px !important;
            padding: 2px 0px 2px 0px;
            display: flex; /* 使用 Flexbox */
            align-items: center; /* 垂直置中 */
        }

        .table td.operate button {
            margin: 0 10px !important; /* 按钮间距 */
        }
    </style>
</head>

<body>
    <div id="app" class="main">
        <!-- app叫用js -->
        <h3>服務類別列表</h3>

        <div class="search-bar">
            <input type="text" v-model="searchTerm" placeholder="請輸入類別名稱" class="form-control" />
            <button class="btn btn-search" v-on:click="searchCategory">查詢</button>
            <button class="btn btn-add" v-on:click="addCategory">新增類別</button>
        </div>
        <div class="table-container">
            <table class="table table-hover">
                <!-- 以下內容會隨著主題不同而改變 -->
                <thead>
                    <tr>
                        <th style="width: 15%">類別編號</th>
                        <th style="width: 25%">類別名稱</th>
                        <th style="width: 40%">描述</th>
                        <th style="width: 20%">操作</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="category in filteredCategorys" :key="category.Id">
                        <td class="data" style="width: 15%">{{ category.Id }}</td>
                        <td class="data" style="width: 25%">{{ category.CategoryName }}</td>
                        <td class="data" style="width: 40%">
                            {{ category.Description }}
                        </td>
                        <td class="operate" style="width: 20%">
                            <button class="btn btn-custom"
                                    v-on:click="editCategory(category.Id)">
                                編輯
                            </button>
                            <button class="btn btn-custom"
                                    v-on:click="deleteCategory(category.Id)">
                                刪除
                            </button>
                        </td>
                    </tr>
                </tbody>

            </table>
        </div>
    </div>
    <!--<script src="../script.js" defer></script>-->
    <script src="https://cdn.jsdelivr.net/npm/vue@3.2.47/dist/vue.global.prod.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const { createApp, ref } = Vue;

        const config = {
            setup() {
                const url = "/api/CategoriesApi/";

                const searchTerm = ref('');
                const categories = ref([]);
                const filteredCategorys = ref([]);

                // 獲取類別資料
                fetch('/ProductCategories/CategoryIndex')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Fetched data:', data);
                        categories.value = data;
                        filteredCategorys.value = data; // 初始化過濾類別
                    })
                    .catch(error => console.error('Error fetching data:', error));

                const searchCategory = () => {
                    // 向後端發送請求以搜尋類別
                    fetch(`https://localhost:44302/api/CategoriesApi/SearchCategory?name=${encodeURIComponent(searchTerm.value)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            filteredCategorys.value = data; // 更新過濾後的類別
                            console.log("Filtered categories:", filteredCategorys.value);
                        })
                        .catch(error => {
                            console.error('搜尋類別時發生錯誤:', error);
                        });
                };

                const addCategory = () => {
                    window.location.href = `/ProductCategories/Create?mode=create`; // 加上 mode 參數
                };

                const editCategory = (Id) => {
                    const url = `/ProductCategories/Edit?id=${Id}&mode=edit`; // 加上 mode 參數
                    console.log('Generated URL:', url);
                    window.location.href = url; // 導向編輯頁面
                };

                const deleteCategory = (Id) => {
                    window.location.href = `/ProductCategories/Delete?id=${Id}&mode=delete`; // 加上 mode 參數
                };

                //const addCategory = () => {
                //    window.location.href = `/ProductCategories/Create/`;
                //};

                //const editCategory = (Id) => {
                //    const url = `/ProductCategories/Edit?id=${Id}`; // 修改為正確的 URL
                //    console.log('Generated URL:', url);
                //    window.location.href = url; // 導向編輯頁面
                //};

                //const deleteCategory = (Id) => {
                //    window.location.href = `/ProductCategories/Delete?id=${Id}`;
                //};

                return {
                    searchTerm,
                    categories,
                    filteredCategorys,
                    searchCategory,
                    addCategory,
                    editCategory,
                    deleteCategory
                };
            }
        };

        const app = createApp(config);
        app.mount('#app');

    </script>
</body>
</html>
